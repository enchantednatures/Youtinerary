name: Rust

on:
  pull_request:
    branches: [ "main" ]
    
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  # fmt:
  #   name: Rustfmt
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@nightly
  #       with:
  #         components: rustfmt
  #     - name: Enforce formatting
  #       run: cargo fmt --check

  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@nightly
  #       with:
  #         components: clippy
  #     - uses: Swatinem/rust-cache@v2
  #     - name: Linting
  #       run: cargo clippy -- -D warnings

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   needs: [fmt, clippy]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@nightly
  #     - uses: Swatinem/rust-cache@v2
  #     - name: Run tests
  #       run: cargo test
  # install-tailwind:
  #     runs-on: ubuntu-latest
  #     steps: 


  build-and-preview-deploy:
    runs-on: ubuntu-latest
    name: Build and Preview Deploy
    # needs: [test]
    permissions:
      pull-requests: write
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - uses: jetli/trunk-action@v0.4.0
      - name: Install Tailwind
        run: |
           curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64
           chmod +x tailwindcss-linux-arm64
           mv tailwindcss-linux-arm64 tailwindcss
      - name: Build
        run: |
          cargo build --verbose
          rustup target add wasm32-unknown-unknown
          trunk build
    
